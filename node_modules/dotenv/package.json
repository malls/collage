{
  "name": "dotenv",
  "version": "0.2.7",
  "description": "Loads environment variables from .env",
  "main": "lib/main.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/scottmotte/dotenv.git"
  },
  "keywords": [
    "dotenv",
    "env",
    ".env",
    "environment",
    "variables",
    "config",
    "settings"
  ],
  "readmeFilename": "README.md",
  "author": {
    "name": "scottmotte"
  },
  "license": "BSD",
  "devDependencies": {
    "mocha": "",
    "should": ""
  },
  "readme": "# dotenv\n\nDotenv loads environment variables from .env into ENV (process.env). It is a superior alternative to [nconf](https://github.com/flatiron/nconf) and other variants.\n\n[![BuildStatus](https://travis-ci.org/scottmotte/dotenv.png?branch=master)](https://travis-ci.org/scottmotte/dotenv)\n[![NPM version](https://badge.fury.io/js/dotenv.png)](http://badge.fury.io/js/dotenv)\n\n> \"Storing [configuration in the environment](http://www.12factor.net/config) is one of the tenets of a [twelve-factor app](http://www.12factor.net/). Anything that is likely to change between deployment environments–such as resource handles for databases or credentials for external services–should be extracted from the code into environment variables.\n> \n> But it is not always practical to set environment variables on development machines or continuous integration servers where multiple projects are run. Dotenv load variables from a `.env` file into ENV when the environment is bootstrapped.\"\n> \n> [Brandon Keepers' Dotenv in Ruby](https://github.com/bkeepers/dotenv)\n\n## Installation\n\nAdd it to your package.json file.\n\n```javascript\n{\n  ...\n  \"dependencies\": {\n    ...\n    \"dotenv\": \"0.2.7\"\n  }\n}\n```\n\n## Usage\n\nAs early as possible in your application require dotenv and load the `.env` variables: \n\n```javascript\nvar dotenv = require('dotenv');\ndotenv.load();\n```\n\nThen, create a `.env` file in the root directory of your project. Add the application configuration you want. For example:\n\n```\nS3_BUCKET=YOURS3BUCKET\nSECRET_KEY=YOURSECRETKEYGOESHERE\nSENDGRID_USERNAME=YOURSENDGRIDUSERNAME\nSENDGRID_PASSWORD=YOURSENDGRIDPASSWORDGOESHERE\n```\n\nWhenever your application loads, these variables will be available in `process.env`:\n\n```javascript\nvar sendgrid_username = process.env.SENDGRID_USERNAME;\nvar secret_key        = process.env.SECRET_KEY;\n```\n\nThat's it. You're done.\n\n### Dotenv.parse\n\nAlso added in `0.2.6` the method `parse` has been exposed. This is how `dotenv` internally parses multiline buffers or strings into an object to place into the `process.env` object. \n\n```javascript\nvar dotenv  = require('dotenv');\nvar file    = fs.readFileSync('./config/staging');\nvar config  = dotenv.parse(file); // passing in a buffer\nconsole.log( typeof config, config ) // object { API : 'http://this.is.a/example' }\n```\n\n## Should I commit my .env file?\n\nTry not to commit your .env file to version control. It is best to keep it local to your machine and local on any machine you deploy to. Keep production credential .envs on your production machines, and keep development .envs on your local machine.\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Added some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n## Running tests\n\n```bash\nnpm install\nnpm test\n```\n\n## Who's using dotenv\n\nHere's a list of apps/sites/libraries using dotenv. It's in no way a complete list. \n\n* [sendgrid-nodejs](https://github.com/sendgrid/sendgrid-nodejs)\n* [handshake.js](https://github.com/handshakejs/handshakejs-api)\n* [xavi](http://xavi.io/)\n* [google-oauth2-service-account](https://github.com/jacoblwe20/google-oauth2-service-account)\n* [kibble](https://github.com/scottmotte/kibble)\n* [flossedtoday](https://github.com/scottmotte/flossedtoday)\n* [github-streaker](https://github.com/scottmotte/github-streaker)\n\n[Create a pull request](https://github.com/scottmotte/dotenv/pulls) and add yours to the list.\n",
  "bugs": {
    "url": "https://github.com/scottmotte/dotenv/issues"
  },
  "homepage": "https://github.com/scottmotte/dotenv",
  "_id": "dotenv@0.2.7",
  "_from": "dotenv@latest"
}
